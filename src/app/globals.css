@tailwind base;
@tailwind components;
@tailwind utilities;

@import "~react-toastify/dist/ReactToastify.css";

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

::-webkit-scrollbar {
  display: none;
}

.slide {
  opacity: 0.5;
  transform: scale(0.7);
}

.slide-active {
  opacity: 1;
  transform: scale(1);
}

.slide-btw {
  opacity: 0.5;
  transform: scale(0.8);
}

.video-container {
  position: relative;
  width: 100%;
  height: 100vh;
}

.background-video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  z-index: 1;
}

/* ------Animations------  */

/* HOME */
.homeButton {
  position: relative;
  overflow: hidden;
  background-color: white;
  color: red;
  transition: color 0.4s ease-in-out;
}

.homeButton::before {
  content: "";
  position: absolute;
  top: 0;
  right: 100%;
  width: 100%;
  height: 100%;
  background-color: red;
  border-radius: inherit;
  transition: right 0.4s ease-in-out;
  z-index: 0;
}

.homeButton:hover::before {
  right: 0;
}

.homeButton:hover {
  color: white;
}

.homeButton > span {
  position: relative;
  z-index: 1;
}

.slick-dots {
  bottom: -30px; /* Adjust the position if needed */
}

/* Slider pointer */
.slick-dots li {
  margin: 0 5px;
}

.slick-dots li button:before {
  font-size: 10px;
  color: gray;
}

.slick-dots li.slick-active button:before {
  color: red; /* Active dot color */
}

/* history part */
.buttonAnimation::before {
  content: "";
  position: absolute;
  top: 0;
  right: 100%;
  width: 100%;
  height: 100%;
  background-color: red;
  border-radius: inherit;
  transition: right 0.4s ease-in-out;
  z-index: 0;
}
.buttonAnimation:hover::before {
  right: 0;
}

.buttonAnimation:hover {
  color: white;
}

.buttonAnimation > span {
  position: relative;
  z-index: 1;
}

/* Member benefits */
.transition-all {
  transition: all 0.5s ease-in-out;
}

.w-full {
  width: 100%;
}

slider-container .slick-slide > div {
  width: 500px; 
}

.slider-container .slick-slide {
  margin: 0 -0px ; /* Adjust this value to control the gap between cards */
}

